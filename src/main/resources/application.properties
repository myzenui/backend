spring.application.name=demo

# DevTools configurations for hot reload
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-exclude=**/*.log,**/*.tmp

# For Spring Boot 2.2+ - Enable JMX for VS Code/Cursor integration
spring.jmx.enabled=true

# Firebase Configuration
# Option 1 (Recommended): Use gcloud auth for Application Default Credentials
# Run: gcloud auth application-default login
# Or for service accounts: gcloud auth activate-service-account --key-file=path/to/key.json
firebase.project.id=zenui-a2508

# Option 2: Provide credentials directly (optional)
# firebase.credentials.json={"type": "service_account", "project_id": "your-project-id", ...}
# Or set GOOGLE_APPLICATION_CREDENTIALS environment variable to point to your service account JSON file
firebase.credentials.json=${FIREBASE_CREDENTIALS_JSON:}

# Spring AI Gemini Configuration
spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_GEMINI_PROJECT_ID:zenui-a2508}
spring.ai.vertex.ai.gemini.location=${VERTEX_AI_GEMINI_LOCATION:us-central1}
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash
spring.ai.vertex.ai.gemini.chat.options.temperature=0.7


# Microsoft SQL Server Configuration (Compatible with Hibernate)
spring.datasource.url=jdbc:sqlserver://db.internal.zen;databaseName=zen;encrypt=true;trustServerCertificate=true;
spring.datasource.username=zen
spring.datasource.password=zen
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Hibernate Configuration for SQL Server
spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
